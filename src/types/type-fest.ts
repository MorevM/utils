/* eslint-disable no-multi-spaces */
export type {
	AsyncReturnType,
	Asyncify,
	CamelCase,
	CamelCasedProperties,
	CamelCasedPropertiesDeep,
	Class,
	// ConditionalExcept,
	// ConditionalPick,
	// ConditionalKeys,
	// ConditionalPickDeep,
	// ConditionalPickDeepOptions, // What is it for?
	Constructor,
	// DelimiterCase,
	// DelimiterCasedProperties,
	// DelimiterCasedPropertiesDeep,
	EmptyObject,
	Entries,
	Entry,
	Exact,
	Except,
	Finite,
	// FixedLengthArray,    // Use `ArrayOf<'exactly', 2, string>` instead
	Float,
	Get,
	GlobalThis,
	HasOptionalKeys,
	HasReadonlyKeys,
	HasRequiredKeys,
	HasWritableKeys,
	IfAny,
	IfNever,
	IfUnknown,
	Includes as ArrayIncludes,
	Integer,
	IntRange,
	InvariantOf,
	IsEmptyObject,
	IsAny,
	IsBooleanLiteral,
	IsEqual,
	IsLiteral,
	IsNever,
	IsNumericLiteral,
	IsStringLiteral,
	IsSymbolLiteral,
	IsUnknown,
	IterableElement as ElementOf,
	Join,
	JsonArray,
	JsonObject,
	JsonPrimitive,
	JsonValue,
	Jsonifiable,
	Jsonify,
	KebabCase,
	KebabCasedProperties,
	KebabCasedPropertiesDeep,
	LastArrayElement,
	LiteralToPrimitive,
	LiteralToPrimitiveDeep,
	LiteralUnion,
	Merge,
	MergeDeep,
	// MergeDeepOptions,                // What is it for?
	MergeExclusive,
	MultidimensionalArray,
	MultidimensionalReadonlyArray,
	Negative,
	NegativeFloat,
	NegativeInfinity,
	NegativeInteger,
	NonEmptyObject,
	NonNegative,
	NonNegativeInteger,
	// ObservableLike,   // If `Observable` proposal will be implemented
	// Observer,         // If `Observable` proposal will be implemented
	OmitIndexSignature,
	// OnComplete,       // If `Observable` proposal will be implemented
	// OnError,          // If `Observable` proposal will be implemented
	// OnNext,           // If `Observable` proposal will be implemented
	Opaque,
	OptionalKeysOf,
	OverrideProperties,
	PackageJson,
	PartialDeep,
	// PartialDeepOptions,
	PartialOnUndefinedDeep,
	// PartialOnUndefinedDeepOptions,

	PascalCase,
	PascalCasedProperties,
	PascalCasedPropertiesDeep,

	PickIndexSignature,
	PositiveInfinity,
	Primitive,
	Promisable as Awaitable,
	ReadonlyDeep,
	ReadonlyKeysOf,
	ReadonlyTuple,
	Replace as StringReplace,
	// RequireAllOrNone,
	// RequireAtLeastOne,
	// RequireExactlyOne,
	RequiredDeep,
	RequiredKeysOf,
	RequireOneOrNone,
	Schema,
	ScreamingSnakeCase as UpperSnakeCase,

	SetNonNullable as PartialNonNullable,
	SetOptional as PartialOptional,
	SetReadonly as PartialReadonly,
	SetRequired as PartialRequired,
	SetReturnType as PartialReturnType,
	Simplify as Explicit,

	SnakeCase,
	SnakeCasedProperties,
	SnakeCasedPropertiesDeep,
	Split,
	Spread,
	StringKeyOf,
	Stringified,
	Tagged,
	TaggedUnion,
	// Trim, // Exported from the lib itself, as it allows to define trimmed character
	TsConfigJson as TsConfig,
	TupleToUnion,
	TypedArray,
	UnionToIntersection,
	UndefinedOnPartialDeep,
	UnknownRecord,
	// Unsubscribable, // If `Observable` proposal will be implemented
	UnwrapOpaque,
	UnwrapTagged,
	ValueOf,
	Writable,
	WritableDeep,
	WritableKeysOf,
} from 'type-fest';
